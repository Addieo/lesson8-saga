{"ast":null,"code":"import _objectSpread from \"/Users/linzhijing/Desktop/\\u6211\\u7684\\u5B66\\u4E60/\\u7B2C\\u4E8C\\u9636\\u6BB5react/\\u8BFE\\u4EF6\\u53CA\\u8D44\\u6599/react\\u9879\\u76EE\\u5B9E\\u6218/lesson8-saga/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { createStore, applyMiddleware } from \"redux\"; // import thunk from \"redux-thunk\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"./mySaga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst loginInfo = {\n  isLogin: false,\n  loading: false,\n  userName: \"\"\n};\n\nfunction loginReducer(state = _objectSpread({}, loginInfo), action) {\n  // console.log(\"action\", action.payload);\n  switch (action.type) {\n    case \"loginRequest\":\n      return _objectSpread({}, state, {}, loginInfo, {\n        loading: true\n      });\n\n    case \"loginSuccess\":\n      return _objectSpread({}, state, {\n        isLogin: true,\n        loading: false\n      }, action.payload);\n\n    case \"loginFailure\":\n      return _objectSpread({}, state, {}, loginInfo, {}, action.payload);\n\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(loginReducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(mySaga);\nexport default store;","map":{"version":3,"sources":["/Users/linzhijing/Desktop/我的学习/第二阶段react/课件及资料/react项目实战/lesson8-saga/src/store/index.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","mySaga","sagaMiddleware","loginInfo","isLogin","loading","userName","loginReducer","state","action","type","payload","store","run"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE,KADO;AAEhBC,EAAAA,OAAO,EAAE,KAFO;AAGhBC,EAAAA,QAAQ,EAAE;AAHM,CAAlB;;AAMA,SAASC,YAAT,CAAsBC,KAAK,qBAAQL,SAAR,CAA3B,EAAgDM,MAAhD,EAAwD;AACtD;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,+BAAYF,KAAZ,MAAsBL,SAAtB;AAAiCE,QAAAA,OAAO,EAAE;AAA1C;;AACF,SAAK,cAAL;AACE,+BAAYG,KAAZ;AAAmBJ,QAAAA,OAAO,EAAE,IAA5B;AAAkCC,QAAAA,OAAO,EAAE;AAA3C,SAAqDI,MAAM,CAACE,OAA5D;;AACF,SAAK,cAAL;AACE,+BAAYH,KAAZ,MAAsBL,SAAtB,MAAoCM,MAAM,CAACE,OAA3C;;AACF;AACE,aAAOH,KAAP;AARJ;AAUD;;AAED,MAAMI,KAAK,GAAGd,WAAW,CAACS,YAAD,EAAeR,eAAe,CAACG,cAAD,CAA9B,CAAzB;AAEAA,cAAc,CAACW,GAAf,CAAmBZ,MAAnB;AAEA,eAAeW,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\n// import thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport mySaga from \"./mySaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst loginInfo = {\n  isLogin: false,\n  loading: false,\n  userName: \"\"\n};\n\nfunction loginReducer(state = { ...loginInfo }, action) {\n  // console.log(\"action\", action.payload);\n  switch (action.type) {\n    case \"loginRequest\":\n      return { ...state, ...loginInfo, loading: true };\n    case \"loginSuccess\":\n      return { ...state, isLogin: true, loading: false, ...action.payload };\n    case \"loginFailure\":\n      return { ...state, ...loginInfo, ...action.payload };\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(loginReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(mySaga);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}